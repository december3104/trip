<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
	
	<select id="loginChkMember" parameterType="Member" resultType="Member">
		select * from member where member_id = #{member_id} and member_secession = 'N'
	</select>
	
	<insert id="insertMember" parameterType="Member">
		insert into member values (#{member_id}, #{member_name}, #{member_pwd}, #{member_email}, 
		#{member_gender}, #{member_phone}, to_date(#{member_birth}, 'YYYY/MM/DD'), 
		<if test="member_profile_original != null">
			#{member_profile_original}, #{member_profile_rename},
		</if>
		<if test="member_profile_original == null">
			null, null, 
		</if>
			default, default, default, default, null, default)
	</insert>
	
	<select id="selectOneMember" parameterType="string" resultType="Member">
		select * from member where member_id = #{value}
	</select>
	
	<update id="updateMember" parameterType="Member">
		update member set member_pwd = #{member_pwd}, member_phone = #{member_phone}
		<if test="member_profile_original != null">
			, member_profile_original = #{member_profile_original}, member_profile_rename = #{member_profile_rename}
		</if>
		where member_id = #{member_id}
	</update>
	
	<update id ="updateGuideQualification" parameterType="string">
		update member set guide_qualification = 'NONE', member_level = 1 where member_id = #{value}
	</update>
	
	<update id="deleteMember" parameterType="string">
		update member set member_secession = 'Y' where member_id = #{value}
	</update>
	
	<select id="selectSearchMemberId" parameterType="string" resultType="_int">
		select count(member_id) from member where member_id = #{value}
	</select>
	
	<select id="selectSearchMemberEmail" parameterType="string" resultType="_int">
		select count(member_email) from member where member_email = #{value}
	</select>
	
	<select id="selectSearchMemberPhone" parameterType="string" resultType="_int">
		select count(member_phone) from member where member_phone = #{value}
	</select>
		
	<select id="selectListAllMember" resultType="Member">
		<![CDATA[
		select * 
		from 
			  (select rownum mnum, MEMBER_ID, MEMBER_NAME, MEMBER_PWD, MEMBER_EMAIL, MEMBER_GENDER, MEMBER_PHONE, MEMBER_BIRTH, MEMBER_PROFILE_ORIGINAL, 
			  						MEMBER_PROFILE_RENAME, MEMBER_REPORT_COUNT, GUIDE_QUALIFICATION, MEMBER_LEVEL, ENROLL_DATE, GUIDE_APPLY_ALARM
				from (select * from member order by ENROLL_DATE desc)
				where member_secession = 'N' and member_level = 1)
		where mnum >= #{startRow} and mnum <= #{endRow} 
		]]>
	</select>
	
	<select id="selectListAllGuide" resultType="GuideMember">
		<![CDATA[
		select member_name, member_id, member_gender, member_email, guide_grade, guide_report_count
		from (select rownum gnum, member_name, member_id, member_gender, member_email, guide_grade, guide_report_count
				from (select * from (select member_name, member_id, member_gender, member_email, guide_grade, guide_report_count 
									from member
									full outer join guide on member.member_id = guide.guide_id
									where guide_qualification = 'DONE')))
		where gnum >= #{startRow} and gnum <= #{endRow}
		]]>
	<!-- 
		select member_name, member_id, member_gender, member_email, guide_grade, guide_report_count 
		from member
		full outer join guide on member.member_id = guide.guide_id
		where guide_qualification = 'DONE'
	 -->
	</select>
	
	<select id="selectListApplyGuide" resultType="Member">
		<![CDATA[
		SELECT * 
		FROM (SELECT ROWNUM mnum, MEMBER_ID,MEMBER_NAME,MEMBER_PWD,MEMBER_EMAIL,MEMBER_GENDER,MEMBER_PHONE,MEMBER_BIRTH,
						MEMBER_PROFILE_ORIGINAL,MEMBER_PROFILE_RENAME,MEMBER_REPORT_COUNT,GUIDE_QUALIFICATION,MEMBER_LEVEL,ENROLL_DATE,GUIDE_APPLY_ALARM
				from (select * from member where guide_qualification='WAIT')) 
		WHERE mnum >= #{ startRow } AND mnum <= #{ endRow }
		]]>
		<!-- 
		select * from member where guide_qualification='WAIT'
		 -->
	</select>
	
	
	<select id="selectDetailViewMember"  parameterType="string" resultType="Member">
		select * from member where member_id = #{value}
	</select>
	
	<update id="detailApplyRejectGuide2" parameterType="string">
		update member set guide_qualification = 'NONE',guide_apply_alarm = 'Y' where member_id = #{value}
	</update>

	<update id="updateDetailAcceptGuide2" parameterType="string">
		update member set guide_qualification = 'DONE', member_level = 2,guide_apply_alarm = 'Y' where member_id = #{value}
	</update>
	
	<update id="updateDetailAcceptNormalReport1" parameterType="string">
		update member set member_report_count = member_report_count+1 where member_id = #{value}
	</update>
	
	<update id="updateDetailAcceptGuideReport1" parameterType="string">
		update member set member_report_count = member_report_count+1 where member_id = #{value}
	</update>
	
	<select id="selectTotal" resultType="_int">
		select count(*) from member where member_secession = 'N' and member_level = 1
	</select>
	
	<select id="selectTotalGuide" resultType="_int">
		select count(*) from (select member_name, member_id, member_gender, member_email, guide_grade, guide_report_count 
								from member
								full outer join guide on member.member_id = guide.guide_id
								where guide_qualification = 'DONE')
	</select>
	
	<select id="selectTotalApplyGuide" resultType="_int">
		select count(*) from member where guide_qualification='WAIT'
	</select>
	
	<update id="updateDetailForcedExitGuide" parameterType="String">
		update member set guide_qualification = 'NONE' , member_level = 1 where member_id = #{value}
	</update>
	
	<update id="deleteDetailForcedExitMember" parameterType="String">
		update member set member_secession = 'Y' where member_id = #{value}
	</update>
	
	<update id="updateWordGuide" parameterType="String">
		update member set guide_qualification = 'WAIT' where member_id = #{value}
	</update>
	
	<select id="selectMissingMemberId" parameterType="Member" resultType="string">
		select member_id from member where member_name = #{member_name} and member_email = #{member_email}
	</select>
	
	<update id="updateMissingMemberPwd" parameterType="Member">
		update member set member_pwd = #{member_pwd} where member_id = #{member_id}
	</update>
	
	<select id="selectFbAlarmCount" resultType="Fellow" parameterType="string">
		select * from fellowmatching join fellowboard on fellowmatching.fb_no = fellowboard.fb_no where fb_alarm = 'Y' and fb_id = #{value}
	</select>
	
	<select id="selectFmAlarmCount" resultType="Fellow" parameterType="string">
		select * from fellowmatching join fellowboard on fellowmatching.fb_no = fellowboard.fb_no where fm_alarm = 'Y' and fm_id = #{value}
	</select>
	
	<select id="selectQnaAlarmCount" resultType="Qna" parameterType="string">
		select * from qna where qna_alarm = 'Y' and qna_id = #{value}
	</select>
	
	<select id="selectGuideApplyAlarmCount" resultType="_int" parameterType="string">
		select count(guide_apply_alarm) from member where guide_apply_alarm = 'Y' and member_id = #{value}
	</select>
	
	<select id="selectGbAlarmCount" resultType="MyGuideMatching" parameterType="string">
		select * from guidematching join guideboard on guidematching.gb_no = guideboard.gb_no where gb_alarm = 'Y' and gb_id = #{value}
	</select>
	
	<update id="updateFbAlarm" parameterType="Fellow">
		update fellowmatching set fb_alarm = 'N' where fb_no = #{fb_no} and fm_id = #{fm_id}
	</update>
	
	<update id="updateFmAlarm" parameterType="Fellow">
		update fellowmatching set fm_alarm = 'N' where fb_no = #{fb_no} and fm_id = #{fm_id}
	</update>
	
	<update id="updateQnaAlarm" parameterType="Qna">
		update qna set qna_alarm = 'N' where qna_no = #{qna_no} and qna_id = #{qna_id}
	</update>
	
	<update id="updateGuideApplyAlarm" parameterType="string">
		update member set guide_apply_alarm = 'N' where member_id = #{value}
	</update>
	
	<update id="updateGbAlarm" parameterType="MyGuideMatching">
		update guidematching set gb_alarm = 'N' where gb_no = #{gb_no} and gm_id = #{gm_id}
	</update>
</mapper>
