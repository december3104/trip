<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="placeMapper">
	<!-- 일정리스트 생성 -->
	<insert id="insertDaylist" parameterType="PlaceDaylist">
		insert into placedaylist values(daylist_seq.nextval, #{daylist_name}, #{daylist_user}, #{daylist_start}, #{daylist_end})
	</insert>

	<!-- 회원의 일정리스트 모두 조회 -->
	<select id="selectDaylist" parameterType="string" resultType="PlaceDaylist">
		select * from placedaylist where daylist_user = #{value} order by daylist_no desc
	</select>
	
	<!-- 시작,끝 범위내 날짜 조회 -->
	<select id="selectDatelist" parameterType="_int" resultType="date">
		<![CDATA[
		select * from (
			select (select daylist_start from placedaylist where daylist_no = #{value}) + level -1 as datelist
			from dual connect by level <= (select daylist_end from placedaylist where daylist_no = #{value})
											- (select daylist_start from placedaylist where daylist_no = #{value}) +1 
		)
		]]>
	</select>
	
	<!-- 회원의 장소리스트 모두 조회 -->
	<select id="selectPlaceList" parameterType="string" resultType="Place">
		<![CDATA[
		select * from place where place_user = #{value} and place_date > sysdate order by place_date 
			]]>
	</select>
	
	<!-- 해당 날짜의 장소리스트 조회 -->
	<select id="selectDailyPlaceList" parameterType="Place" resultType="Place">
		select * from place where place_user = #{place_user} and place_date = #{place_date}
	</select>
	
	<!-- 장소 담기 -->
	<insert id="insertPlace" parameterType="Place">
		insert into place values(#{place_id}||to_char(place_seq.nextval), #{place_id}, #{place_user}, #{place_name}, 
		<if test="place_address != null">
		#{place_address},
		</if>
		<if test="place_address == null">
		null,
		</if>
		<if test="place_phone != null">
		#{place_phone}, 
		</if>
		<if test="place_phone == null">
		null, 
		</if>
		<if test="opening_time != null">
		#{opening_time},
		</if>
		<if test="opening_time == null">
		null, 
		</if>
		<if test="place_date != null">
		#{place_date},
		</if>
		<if test="place_date == null">
		null,
		</if>
		#{place_geo})
	</insert>
	
	<!-- 장소 이름 수정 -->
	<update id="updatePlaceName" parameterType="Place">
		update place set place_name = #{place_name} where place_code = #{place_code}
	</update>
	
	<!-- 장소 리스트에서 장소 삭제 -->
	<delete id="deletePlace" parameterType="string">
		delete from place where place_code=#{value}
	</delete>
	
	<!-- 일정 목록에서 일정 삭제 -->
	<delete id="deleteDaylist" parameterType="_int">
		delete from placedaylist where daylist_no=#{value}
	</delete>
	
	<!-- 일정 전체 수정(이름,날짜) -->
	<update id="updateDaylist" parameterType="PlaceDaylist">
		update placedaylist set daylist_name = #{daylist_name}, daylist_start = #{daylist_start}, daylist_end = #{daylist_end} 
		where daylist_no = #{daylist_no}	
	</update>
	
	<!-- 회원의 일정 조회_sh -->
	<select id="selectguideDaylistOne" parameterType="String" resultType="PlaceDaylist">
		select daylist_start, daylist_end from placedaylist where daylist_no = #{value}
	</select>
	
	<!-- 회원의 장소 조회_sh -->
	<select id="selectPlacelist" parameterType="PlaceAll" resultType="PlaceAll">
		select place_name from place where place_date
		between (select daylist_start from placedaylist where daylist_no = #{daylist_no}) 
 			and (select daylist_end from placedaylist where daylist_no=#{daylist_no})
	</select> 
	
</mapper>
